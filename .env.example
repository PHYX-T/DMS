# TestCodex DMS Environment Configuration Template
# Copy this to .env and customize for your environment

# Database Configuration
DATABASE_URL=postgres://USERNAME@localhost:5432/dms_dev

# PostgreSQL Path (for Homebrew installation)
PATH=/opt/homebrew/opt/postgresql@15/bin:${PATH}

# Application Configuration
HOST=127.0.0.1
PORT=8000
ENVIRONMENT=development

# Application Settings
APP_NAME=TestCodex DMS
DEBUG=true

# Document Validation (matches config.example.yaml)
DOCUMENT_ID_REGEX=^[A-Z]{3}-[A-Z]{2}-[A-Z]{3}-[A-Z]{3}-\\d{3}$

# Search Configuration
SEARCH_TARGET_LATENCY_MS=2000

# Security Configuration
# Replace with actual values for your organization
SSO_PROVIDER=microsoft365
SSO_TENANT_ID=YOUR_TENANT_ID

# Storage Configuration
DOCUMENTS_BUCKET=dms-documents
RESTRICT_SOURCE_FILES=true

# Notifications
EMAIL_FROM=dms-noreply@example.com
ENABLE_REVIEW_REMINDERS=true

# PostgreSQL Connection Troubleshooting Options:
#
# Option 1: Basic connection (current default)
# DATABASE_URL=postgres://USERNAME@localhost:5432/dms_dev
#
# Option 2: With explicit host and password
# DATABASE_URL=postgres://USERNAME:PASSWORD@127.0.0.1:5432/dms_dev
#
# Option 3: For auth issues, you can also use ~/.pgpass file:
# echo "localhost:5432:dms_dev:USERNAME:PASSWORD" >> ~/.pgpass
# chmod 600 ~/.pgpass
#
# Option 4: If you have multiple PostgreSQL versions:
# Use explicit path: /opt/homebrew/opt/postgresql@15/bin/psql