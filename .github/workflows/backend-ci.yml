name: Backend CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/package-lock.json
      - run: npm ci || true
      - run: npm run build || true
      - run: npm run lint || true
      - run: npm run test || true
      - run: npm run test:e2e || true

  zap-baseline:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Start backend
        working-directory: backend
        run: |
          npm ci || true
          npm run build || true
          node dist/main.js &
          echo "Waiting for server..." && sleep 5
      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:3000/api/v1/health'

  semgrep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: returntocorp/semgrep-action@v1
        with:
          config: 'p/tsjavascript'

  perf-k6:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Start backend
        working-directory: backend
        run: |
          npm ci || true
          npm run build || true
          node dist/main.js &
          echo "Waiting for server..." && sleep 5
      - name: Run k6
        uses: grafana/k6-action@v0.3.1
        with:
          filename: backend/perf/search.js
        env:
          BASE_URL: http://localhost:3000/api/v1

  docker:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/dms-backend:${{ github.ref_name }}

